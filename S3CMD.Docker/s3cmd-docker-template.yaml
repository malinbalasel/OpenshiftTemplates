---
##################
# BEGIN TEMPLATE #
##################
kind: "Template"
apiVersion: "v1"
metadata:
  name: "s3cmd"
  annotations:
    description: "S3CMD tool"
    tags: "kermit"
labels: 
  template: "s3cmd"
objects:
###################
# Layer 0: Images #
###################
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: alpine
  spec:
    dockerImageRepository: docker.io/alpine
  tags:
    - name: "3.3"
########################
### Layer 1: Builds ####
########################
- kind: "BuildConfig"
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    annotations:
      description: "Defines how to build the S3CMD tool"
  spec:
    completionDeadlineSeconds: 480
    source:
      type: "Git"
      git:
        uri: "https://github.com/orangekmt/docker-s3cmd.git"
    strategy:
      type: "Docker"
      dockerStrategy:
        from:
          kind: "ImageStreamTag"
          name: "alpine:3.3"
    output:
      to:
        kind: "ImageStreamTag"
        name: "${APPLICATION_NAME}:latest"
    triggers:
      - type: "ImageChange"
      - type: "ConfigChange"
###################
# Layer 2: Images #
###################
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
    annotations:
      description: "Resulting Docker Image after the buit of s3cmd."
  spec:
    tags:
      -
        tag: latest
########################
# Layer 3: Deployments #
########################
########################
####### FrontEnd #######
########################
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      name: "${APPLICATION_NAME}"
  spec:
    selector:
      name: "${APPLICATION_NAME}"
    replicas: 1
    template:
      metadata:
        labels:
          name: "${APPLICATION_NAME}"
      spec:
        containers:
        - image: "${APPLICATION_NAME}"
          imagePullPolicy: Always
          name: "${APPLICATION_NAME}"
          ports:
          - containerPort: 8080
          env:
          - name: "aws_key"
            value: "${ACCOUNT_KEY}"
          - name: "aws_secret"
            value: "${ACCOUNT_SECRET}"
          - name: "cmd"
            value: "${OPERATION}"
          - name: "s3_host_base"
            value: "${S3_SERVER_HOST}"
          - name: "DEST_S3"
            value: "s3://${S3_BUCKET}"
          - name: "SRC_S3"
            value: "s3://${S3_BUCKET}"	
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange	  
##############
# Parameters #
##############
parameters:
- name: APPLICATION_NAME
  displayName: "Application name"
  description: "The name assigned to all of the objects defined in this template."
  required: true
  value: "s3cmd"
- name: ACCOUNT_KEY
  displayName: "S3 Server Account Key"
  description: "The key value used for user authentication to the S3 Server."
  required: true
  value: kermit-prod
- name: ACCOUNT_SECRET
  displayName: "S3 Server Account Secret"
  description: "The secret value used for password authentication to the S3 Server."
  required: true
- name: S3_SERVER_HOST
  displayName: "S3 Server hostname"
  description: "The hostname of the S3 Server."
  required: true
  value: storage.orange.com
- name: S3_BUCKET
  displayName: "S3 Server bucket"
  description: "The bucket name within the S3 Server."
  required: true
  value: s3cmd-test
- name: OPERATION
  displayName: "Operation"
  description: "The operation type that you want to perform. (sync-local-to-s3 / sync-s3-to-local)"
  required: true
  value: sync-local-to-s3
